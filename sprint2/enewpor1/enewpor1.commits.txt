Metronome.js:
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400   1) // Metronome.js
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400   2) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400   3) import React, { useState, useEffect, useRef } from 'react';
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400   4) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400   5) const Metronome = () => {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400   6)   const [bpm, setBpm] = useState(100); // Default BPM
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400   7)   const [isPlaying, setIsPlaying] = useState(false);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400   8)   const [beatActive, setBeatActive] = useState(false);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400   9)   const timerRef = useRef(null);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  10)   const audioContextRef = useRef(null);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  11) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  12)   useEffect(() => {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  13)     // Initialize AudioContext
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  14)     audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  15) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  16)     // Cleanup function
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  17)     return () => {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  18)       stopMetronome();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  19)       if (audioContextRef.current) {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  20)         audioContextRef.current.close();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  21)       }
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  22)     };
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  23)   }, []);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  24) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  25)   const startMetronome = () => {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  26)     if (isPlaying) return;
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  27) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  28)     if (audioContextRef.current.state === 'suspended') {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  29)       audioContextRef.current.resume();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  30)     }
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  31) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  32)     setIsPlaying(true);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  33)     playClickSound(); // Play the first click immediately
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  34) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  35)     const interval = (60 / bpm) * 1000; // Calculate interval in milliseconds
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  36)     timerRef.current = setInterval(() => {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  37)       playClickSound();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  38)     }, interval);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  39)   };
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  40) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  41)   const stopMetronome = () => {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  42)     setIsPlaying(false);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  43)     clearInterval(timerRef.current);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  44)   };
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  45) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  46)   const toggleMetronome = () => {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  47)     if (isPlaying) {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  48)       stopMetronome();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  49)     } else {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  50)       startMetronome();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  51)     }
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  52)   };
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  53) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  54)   const playClickSound = () => {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  55)     const audioCtx = audioContextRef.current;
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  56)     const oscillator = audioCtx.createOscillator();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  57)     const gainNode = audioCtx.createGain();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  58) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  59)     oscillator.connect(gainNode);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  60)     gainNode.connect(audioCtx.destination);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  61) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  62)     oscillator.type = 'sine';
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  63)     oscillator.frequency.setValueAtTime(880, audioCtx.currentTime); 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  64)     gainNode.gain.setValueAtTime(0.5, audioCtx.currentTime);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  65) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  66)     oscillator.start(audioCtx.currentTime);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  67)     oscillator.stop(audioCtx.currentTime + 0.05); 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  68) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  69)     // Fade out the sound
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  70)     gainNode.gain.exponentialRampToValueAtTime(0.001, audioCtx.currentTime + 0.05);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  71) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  72)     // Toggle beat indicator
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  73)     setBeatActive(true);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  74)     setTimeout(() => setBeatActive(false), 100); 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  75)   };
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  76) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  77)   const handleBpmChange = (e) => {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  78)     const newBpm = Number(e.target.value);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  79)     setBpm(newBpm);
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  80) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  81)     if (isPlaying) {
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  82)       stopMetronome();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  83)       startMetronome();
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  84)     }
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  85)   };
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  86) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  87)   return (
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  88)     <div className="metronome-container">
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  89)       <h3>Metronome</h3>
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  90)       <div className="metronome-controls">
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  91)         <label htmlFor="bpm">BPM:</label>
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  92)         <input
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  93)           type="number"
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  94)           id="bpm"
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  95)           value={bpm}
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  96)           onChange={handleBpmChange}
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  97)           min="40"
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  98)           max="240"
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400  99)         />
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 100)         <button onClick={toggleMetronome}>
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 101)           {isPlaying ? 'Stop' : 'Start'}
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 102)         </button>
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 103)       </div>
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 104)       <div
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 105)         className={`beat-indicator ${beatActive ? 'active' : ''}`}
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 106)       ></div>
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 107)     </div>
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 108)   );
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 109) };
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 110) 
e2897aa3 (evannewport 2024-10-17 16:31:16 -0400 111) export default Metronome;

Fretboard.js:
055d267d (evannewport    2024-10-17 16:00:40 -0400  3) const stringNotes = { 'E2': 'E', 'A': 'A', 'D': 'D', 'G': 'G', 'B': 'B', 'E': 'E' };
055d267d (evannewport    2024-10-17 16:00:40 -0400  4) 
055d267d (evannewport    2024-10-17 16:00:40 -0400  6)   const frets = Array.from({ length: 13 }, (_, index) => index); // 0 to 12 frets
055d267d (evannewport    2024-10-17 16:00:40 -0400  7)   const strings = ['E2', 'A', 'D', 'G', 'B', 'E']; // Distinguish between low E (E2) and high E
055d267d (evannewport    2024-10-17 16:00:40 -0400 20)       {strings.map((string, stringIndex) => {
055d267d (evannewport    2024-10-17 16:00:40 -0400 21)         const baseNoteName = stringNotes[string];
055d267d (evannewport    2024-10-17 16:00:40 -0400 22)         const baseNoteIndex = noteNames.indexOf(baseNoteName);
055d267d (evannewport    2024-10-17 16:00:40 -0400 23)         return (
055d267d (evannewport    2024-10-17 16:00:40 -0400 24)           <div key={stringIndex} className="guitar-string">
055d267d (evannewport    2024-10-17 16:00:40 -0400 25)             {frets.map((fret) => {
055d267d (evannewport    2024-10-17 16:00:40 -0400 26)               const noteAtFret = noteNames[(baseNoteIndex + fret) % 12];
055d267d (evannewport    2024-10-17 16:00:40 -0400 28)               return (
055d267d (evannewport    2024-10-17 16:00:40 -0400 29)                 <div
055d267d (evannewport    2024-10-17 16:00:40 -0400 30)                   key={fret}
055d267d (evannewport    2024-10-17 16:00:40 -0400 31)                   className={`guitar-fret ${displayedNotes.includes(noteAtFret) ? 'highlight' : ''}`}
055d267d (evannewport    2024-10-17 16:00:40 -0400 32)                   onMouseEnter={() => setHoveredNote({ string, fret, note: noteAtFret })}
055d267d (evannewport    2024-10-17 16:00:40 -0400 33)                   onMouseLeave={() => setHoveredNote(null)}
055d267d (evannewport    2024-10-17 16:00:40 -0400 34)                   onClick={() => handleNoteClick(string, fret)}
055d267d (evannewport    2024-10-17 16:00:40 -0400 35)                 >
055d267d (evannewport    2024-10-17 16:00:40 -0400 36)                   <p className="note-label">{noteAtFret}</p>
055d267d (evannewport    2024-10-17 16:00:40 -0400 37)                 </div>
055d267d (evannewport    2024-10-17 16:00:40 -0400 38)               );
055d267d (evannewport    2024-10-17 16:00:40 -0400 39)             })}
055d267d (evannewport    2024-10-17 16:00:40 -0400 40)           </div>
055d267d (evannewport    2024-10-17 16:00:40 -0400 41)         );
055d267d (evannewport    2024-10-17 16:00:40 -0400 42)       })}
055d267d (evannewport    2024-10-17 16:00:40 -0400 47) export default Fretboard;

App.js:
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400   4) import Metronome from './Metronome';
055d267d (evannewport    2024-10-17 16:00:40 -0400  11)   const [playlist, setPlaylist] = useState([]);
055d267d (evannewport    2024-10-17 16:00:40 -0400  17)   const handleNoteClick = (string, fret) => {
055d267d (evannewport    2024-10-17 16:00:40 -0400  18)     const audio = new Audio(`${process.env.PUBLIC_URL}/sounds/${string}_${fret}.wav`);
055d267d (evannewport    2024-10-17 16:00:40 -0400  19)     audio.play().catch((error) => {
055d267d (evannewport    2024-10-17 16:00:40 -0400  20)       console.error(`Error playing sound: ${error}`);
055d267d (evannewport    2024-10-17 16:00:40 -0400  21)     });
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 108) 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 109)       <div className="metronome-section">
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 110)         <Metronome />
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 111)       </div>
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 112) 

App.css:
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400   2)   background: linear-gradient(135deg, #1c1b18, #3e3d36);
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400   3)   color: #e0e0e0; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  14)   border-radius: 50%;
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  15)   box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.2); 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  24)   background-color: #2e2d2b; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  26)   color: #f4f4f2; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  39)   color: #f4f4f2; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  46)   border: 1px solid #5c5a58; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  47)   border-radius: 5px;
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  48)   background-color: #3e3d36; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  49)   color: #e0e0e0; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  50)   transition: box-shadow 0.3s, background-color 0.3s, border-color 0.3s;
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  51) }
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  52) 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  53) .selection-container select:focus {
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  54)   box-shadow: 0 0 5px #d4a373; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  55)   border-color: #d4a373; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  56) }
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  57) 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  58) .selection-container select:hover {
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  59)   border-color: #d4a373;
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  60)   background-color: #4b4a43; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  68)   background-color: #2b2a27; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  71)   box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  82)   border-top: 2px solid #7d7567; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  87)   width: 8vw; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  89)   max-width: 60px; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  91)   background-color: #4f4e4a; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  92)   border: 1px solid #33312e;
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400  98)   transition: background-color 0.3s, color 0.3s;
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400 102)   background-color: #b24c32; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400 103)   color: #f4f4f2; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400 109)   color: #f4f4f2; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400 113)   background-color: #8b8a83; 
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400 116)   transition: background-color 0.3s, color 0.3s;
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400 121)   background-color: #3e3d36;
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400 122)   color: #f4f4f2;
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400 124)   border: 1px solid #b2a680; 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 171) }
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 172) 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 173) /* Metronome Styles */
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 174) 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 175) .metronome-container {
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 176)   border: 1px solid #ddd;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 177)   padding: 15px;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 178)   margin: 20px auto;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 179)   max-width: 300px;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 180)   text-align: center;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 181)   background-color: #6A2A00;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 182) }
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 183) 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 184) .metronome-controls {
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 185)   display: flex;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 186)   align-items: center;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 187)   justify-content: center;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 188)   margin-top: 10px;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 189) }
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 190) 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 191) .metronome-controls label {
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 192)   margin-right: 10px;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 193) }
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 194) 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 195) .metronome-controls input {
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 196)   width: 60px;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 197)   text-align: center;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 198)   margin-right: 10px;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 199) }
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 200) 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 201) .metronome-controls button {
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 202)   padding: 5px 15px;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 203) }
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 204) 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 205) 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 206) .beat-indicator {
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 207)   width: 20px;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 208)   height: 20px;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 209)   background-color: #ddd;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 210)   margin: 10px auto;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 211)   border-radius: 50%;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 212)   transition: background-color 0.1s;
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 213) }
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 214) 
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 215) .beat-indicator.active {
e2897aa3 (evannewport    2024-10-17 16:31:16 -0400 216)   background-color: #ff4d4d;
ff0c63a9 (evannewport    2024-10-03 17:25:48 -0400 217) }

